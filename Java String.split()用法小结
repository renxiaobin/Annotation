在java.lang的包中有String.split()方法,返回的是一个字符串数组，其中参数regex是一个regular-expression的匹配模式，不是一个简单的字符串；
若省略该参数，则返回包含整个字符串单一元素的数组
public String[] split(String regex)

注意点：
1、如果用“.”作为分隔的话,应该写做String.split("\\."),而不能用String.split(".");
2、如果用“|”作为分隔的话,应该写做String.split("\\|"),而不能用String.split("|");
因为“.”和“|”都是转义字符,必须得加"\\"，而直接用“*”和“+”作为参数将抛出java.util.regex.PatternSyntaxException异常。

如果在一个字符串中有多个分隔符,可以用“|”作为连字符,比如,“name=1 and id=2 or ad=3”,为了把三个条件都分隔出来,可以用String.split("and|or");

String.split("-")常见使用情况：
1.若字符串为"a-b" 分割后的长度为：2,分割后的结果为： "a" "b"
2.若字符串为"a-b-" 分割后的长度为：2,分割后的结果为： "a" "b"
3.若字符串为"-a-b" 分割后的长度为：3,分割后的结果为： "" "a" "b"
4.若字符串为"-a-b-" 分割后的长度为：3,分割后的结果为： "" "a" "b"
5.若字符串为"a" 分割后的长度为：1,分割后的结果为： "a"
6.若字符串为"-" 分割后的长度为：0,分割后的结果为：
7.若字符串为"--" 分割后的长度为：0,分割后的结果为：
8.若字符串为"" 分割后的长度为：1,分割后的结果为： ""

所以，
当字符串只包含分隔符时，返回数组没有元素；
当字符串不包含分隔符时，返回数组只包含一个元素（该字符串本身）；
字符串最尾部出现的分隔符可以看成不存在，不影响字符串的分隔；
字符串最前端出现的分隔符将分隔出一个空字符串以及剩下的部分的正常分隔；
